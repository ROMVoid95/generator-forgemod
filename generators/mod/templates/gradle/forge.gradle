String gcbuild = "261"
String gcversion = "1.12.2-4.0.2.${gcbuild}"

repositories {
    mavenCentral()
    mavenLocal()
    ivy {
        url "https://micdoodle8.com/new-builds/"
        layout 'pattern', {
            artifact "[organization]/${gcbuild}/[module]-[revision].jar"
        }
        metadataSources {
            artifact()
        }
    }
}

dependencies {
    compile "GC-1.12-dev:GalacticraftCore-Dev:${gcversion}"
    compile "GC-1.12-dev:Galacticraft-Planets-Dev:${gcversion}"
    compile "GC-1.12-dev:MicdoodleCore-Dev:${gcversion}"
}


minecraft {
    version = "${config.minecraft_version}-${config.forge_version}"
    runDir = "run"
    useDepAts = true

    replaceIn "Reference.java"
    replace "@VERSION@", project.version
    replace "@MC_VERSION@", project.config.minecraft_version
    replace "@FORGE_VERSION@", project.config.forge_version
    replace "@BUILD_NUMBER@", project.buildnumber

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "${config.mcp_mappings_version}"
}

if (project.buildnumber.equals("RELEASE"))
    version = "${config.minecraft_version}-${config.mod_version}"
else
    version = "${config.minecraft_version}-${config.mod_version}-${buildnumber}"

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, that is not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
